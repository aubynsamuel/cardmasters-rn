import { StyleSheet } from "react-native";
import Colors from "./Colors";

const getStyles = (width, height) => {
  const styles = StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: Colors.containerBackground,
      padding: width > 400 ? 30 : 10,
      // borderStyle: "dotted",
      // borderWidth: 2,
    },
    computerSection: {
      alignItems: "center",
      width: width > 400 ? 280 : "100%",
      backgroundColor: Colors.opponentAreaBackground,
      flex: width > 400 ? 1.5 : 1,
      borderRadius: 20,
    },
    humanSection: {
      alignItems: "center",
      width: width > 400 ? 280 : "100%",
      backgroundColor: Colors.humanAreaBackground,
      flex: width > 400 ? 1.5 : 1,
      borderRadius: 20,
    },
    sectionHeader: {
      fontSize: 18,
      fontWeight: "600",
      marginBottom: 5,
      color: Colors.mainTextColor,
      textAlign: "center",
    },
    hand: {
      flexDirection: "row",
      // backgroundColor: "red",
    },
    cardBack: {
      margin: 5,
      backgroundColor: Colors.cardBackBackground,
      borderRadius: 8,
      borderWidth: 1,
      borderColor: Colors.cardBackBorder,
      alignItems: "center",
      justifyContent: "center",
      height: 70,
      width: 45,
    },
    deckCardBack: {
      margin: 5,
      backgroundColor: Colors.cardBackBackground,
      borderRadius: 8,
      borderWidth: 1,
      borderColor: Colors.cardBackBorder,
      alignItems: "center",
      justifyContent: "center",
      height: 60,
      width: 40,
      position: "absolute",
    },
    cardBackText: {
      fontSize: 50,
      color: "#fff",
    },
    playText: {
      fontSize: 15,
      marginVertical: 2,
    },
    roundText: {
      fontSize: 18,
      textAlign: "center",
    },
    newGameButton: {
      backgroundColor: Colors.buttonBackground,
      paddingVertical: 5,
      paddingHorizontal: 25,
      borderRadius: 8,
      alignSelf: "center",
      justifyContent: "center",
      alignContent: "center",
      alignItems: "center",
    },
    newGameText: {
      color: "#fff",
      fontSize: 18,
      textAlign: "center",
    },
    gameResultSection: {
      flex: 2,
      justifyContent: "center",
      alignItems: "center",
      bottom: width > 400 ? 30 : 0,
      // backgroundColor: "red",
    },
    message: {
      fontSize: 16,
      textAlign: "center",
      color: Colors.mainTextColor,
    },
    messageContainer: {
      bottom: 10,
      width: width > 400 ? 400 : 320,
      padding: 5,
      backgroundColor: Colors.logContainerBackground,
      borderRadius: 15,
    },
    currentRound: {
      fontSize: 18,
      textAlign: "center",
      flexDirection: width > 400 || height < 640 ? "row" : "column",
      flexWrap: "wrap",
      gap: 30,
      justifyContent: "center",
      alignItems: "center",
      // backgroundColor: "blue",
      // flex: 1,
    },
    controlText: {
      fontSize: 18,
      textAlign: "center",
      marginVertical: 5,
    },
    animationOverlay: {
      position: "absolute",
      left: 0,
      right: 0,
      top: 0,
      bottom: 0,
      justifyContent: "center",
      alignItems: "center",
      zIndex: 100,
      backgroundColor: "rgba(0,0,0,0.3)",
    },
    dealingText: {
      fontSize: 24,
      fontWeight: "bold",
      color: "#333",
      backgroundColor: "rgba(255,255,255,1)",
      padding: 15,
      borderRadius: 10,
    },
    shuffleContainer: {
      alignItems: "center",
      justifyContent: "center",
      padding: 20,
      backgroundColor: "rgba(255,255,255,1)",
      borderRadius: 10,
      elevation: 5,
    },
    shuffleText: {
      fontSize: 24,
      fontWeight: "bold",
      marginBottom: 20,
      color: "#333",
    },
    shuffleCard: {
      position: "absolute",
      width: 45,
      height: 70,
      backgroundColor: Colors.cardBackBackground,
      borderRadius: 8,
      borderWidth: 1,
      borderColor: Colors.cardBackBorder,
      justifyContent: "center",
      alignItems: "center",
      alignSelf: "center",
    },
    shuffleCards: {
      width: 100,
      height: 100,
    },
    controlIndicator: {
      fontWeight: "bold",
      fontSize: 20,
    },
  });
  return styles;
};

export default getStyles;
